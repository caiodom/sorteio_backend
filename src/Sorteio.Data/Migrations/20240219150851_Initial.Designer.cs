// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sorteio.Data.Context;

#nullable disable

namespace Sorteio.Data.Migrations
{
    [DbContext(typeof(SorteioDbContext))]
    [Migration("20240219150851_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sorteio.Business.Models.DadosSorteio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Premio")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(20,4)");

                    b.HasKey("Id");

                    b.ToTable("DadosSorteio", (string)null);
                });

            modelBuilder.Entity("Sorteio.Business.Models.HistoricoSorteio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("IdTicketSorteio")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdTicketSorteio");

                    b.ToTable("HistoricoSorteio", (string)null);
                });

            modelBuilder.Entity("Sorteio.Business.Models.ParticipanteSorteio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ParticipanteSorteio", (string)null);
                });

            modelBuilder.Entity("Sorteio.Business.Models.TicketSorteio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdDadosSorteio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdParticipanteSorteio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdDadosSorteio");

                    b.HasIndex("IdParticipanteSorteio");

                    b.ToTable("TicketSorteio", (string)null);
                });

            modelBuilder.Entity("Sorteio.Business.Models.HistoricoSorteio", b =>
                {
                    b.HasOne("Sorteio.Business.Models.TicketSorteio", "TicketSorteio")
                        .WithMany("HistoricoSorteios")
                        .HasForeignKey("IdTicketSorteio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketSorteio");
                });

            modelBuilder.Entity("Sorteio.Business.Models.TicketSorteio", b =>
                {
                    b.HasOne("Sorteio.Business.Models.DadosSorteio", "DadosSorteio")
                        .WithMany("TicketSorteios")
                        .HasForeignKey("IdDadosSorteio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sorteio.Business.Models.ParticipanteSorteio", "ParticipanteSorteio")
                        .WithMany("TicketSorteios")
                        .HasForeignKey("IdParticipanteSorteio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosSorteio");

                    b.Navigation("ParticipanteSorteio");
                });

            modelBuilder.Entity("Sorteio.Business.Models.DadosSorteio", b =>
                {
                    b.Navigation("TicketSorteios");
                });

            modelBuilder.Entity("Sorteio.Business.Models.ParticipanteSorteio", b =>
                {
                    b.Navigation("TicketSorteios");
                });

            modelBuilder.Entity("Sorteio.Business.Models.TicketSorteio", b =>
                {
                    b.Navigation("HistoricoSorteios");
                });
#pragma warning restore 612, 618
        }
    }
}
